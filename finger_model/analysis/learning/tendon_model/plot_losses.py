import matplotlib.pyplot as plt
import jax.numpy as np

from jax.numpy import DeviceArray, float64

losses1 = []
losses2 = [DeviceArray(0.02384384, dtype=float64), DeviceArray(0.02369755, dtype=float64), DeviceArray(0.02006348, dtype=float64), DeviceArray(0.01986387, dtype=float64), DeviceArray(0.01694101, dtype=float64), DeviceArray(0.01641967, dtype=float64), DeviceArray(0.01363589, dtype=float64), DeviceArray(0.0135158, dtype=float64), DeviceArray(0.01274455, dtype=float64), DeviceArray(0.01265841, dtype=float64), DeviceArray(0.01149513, dtype=float64), DeviceArray(0.01102709, dtype=float64), DeviceArray(0.01099268, dtype=float64), DeviceArray(0.01039877, dtype=float64), DeviceArray(0.01023992, dtype=float64), DeviceArray(0.00985798, dtype=float64), DeviceArray(0.00948044, dtype=float64), DeviceArray(0.00946296, dtype=float64), DeviceArray(0.00918219, dtype=float64), DeviceArray(0.00805772, dtype=float64), DeviceArray(0.00681449, dtype=float64), DeviceArray(0.00667089, dtype=float64), DeviceArray(0.00609095, dtype=float64), DeviceArray(0.0056217, dtype=float64), DeviceArray(0.0055801, dtype=float64), DeviceArray(0.00508964, dtype=float64), DeviceArray(0.00506882, dtype=float64), DeviceArray(0.0047571, dtype=float64), DeviceArray(0.00474878, dtype=float64), DeviceArray(0.00471602, dtype=float64), DeviceArray(0.00468659, dtype=float64), DeviceArray(0.00467135, dtype=float64), DeviceArray(0.00467023, dtype=float64), DeviceArray(0.00465297, dtype=float64), DeviceArray(0.00465134, dtype=float64), DeviceArray(0.00464483, dtype=float64), DeviceArray(0.00464071, dtype=float64), DeviceArray(0.00461645, dtype=float64), DeviceArray(0.00461309, dtype=float64), DeviceArray(0.00455302, dtype=float64), DeviceArray(0.00452553, dtype=float64), DeviceArray(0.00447913, dtype=float64), DeviceArray(0.00447178, dtype=float64), DeviceArray(0.0044221, dtype=float64), DeviceArray(0.00441945, dtype=float64), DeviceArray(0.00437187, dtype=float64), DeviceArray(0.00436738, dtype=float64), DeviceArray(0.00435754, dtype=float64), DeviceArray(0.00435238, dtype=float64), DeviceArray(0.00435231, dtype=float64), DeviceArray(0.00434988, dtype=float64), DeviceArray(0.0043472, dtype=float64), DeviceArray(0.0043439, dtype=float64), DeviceArray(0.0043427, dtype=float64), DeviceArray(0.0043395, dtype=float64), DeviceArray(0.00433789, dtype=float64), DeviceArray(0.00433733, dtype=float64), DeviceArray(0.00433578, dtype=float64), DeviceArray(0.00433479, dtype=float64), DeviceArray(0.00433204, dtype=float64), DeviceArray(0.00433, dtype=float64), DeviceArray(0.00431988, dtype=float64), DeviceArray(0.00430436, dtype=float64), DeviceArray(0.00428406, dtype=float64), DeviceArray(0.00426971, dtype=float64), DeviceArray(0.00422553, dtype=float64), DeviceArray(0.0042252, dtype=float64), DeviceArray(0.00422378, dtype=float64), DeviceArray(0.00422018, dtype=float64), DeviceArray(0.00421903, dtype=float64), DeviceArray(0.00421885, dtype=float64), DeviceArray(0.00421854, dtype=float64), DeviceArray(0.00421809, dtype=float64), DeviceArray(0.00421537, dtype=float64), DeviceArray(0.00421358, dtype=float64), DeviceArray(0.00421331, dtype=float64), DeviceArray(0.00421307, dtype=float64), DeviceArray(0.00421267, dtype=float64), DeviceArray(0.00421262, dtype=float64), DeviceArray(0.0042117, dtype=float64), DeviceArray(0.00421085, dtype=float64), DeviceArray(0.00421078, dtype=float64), DeviceArray(0.00420913, dtype=float64), DeviceArray(0.00420904, dtype=float64), DeviceArray(0.00415871, dtype=float64), DeviceArray(0.00409992, dtype=float64), DeviceArray(0.00409032, dtype=float64), DeviceArray(0.00404267, dtype=float64), DeviceArray(0.00404234, dtype=float64), DeviceArray(0.00404081, dtype=float64), DeviceArray(0.00403657, dtype=float64), DeviceArray(0.00403425, dtype=float64), DeviceArray(0.00403333, dtype=float64), DeviceArray(0.00403286, dtype=float64), DeviceArray(0.00403124, dtype=float64), DeviceArray(0.00402934, dtype=float64), DeviceArray(0.00400737, dtype=float64), DeviceArray(0.00400645, dtype=float64), DeviceArray(0.00400589, dtype=float64), DeviceArray(0.00400103, dtype=float64), DeviceArray(0.00399439, dtype=float64), DeviceArray(0.003992, dtype=float64), DeviceArray(0.00398744, dtype=float64), DeviceArray(0.00398685, dtype=float64), DeviceArray(0.00398397, dtype=float64), DeviceArray(0.00397232, dtype=float64), DeviceArray(0.00396423, dtype=float64), DeviceArray(0.00396168, dtype=float64), DeviceArray(0.00396058, dtype=float64), DeviceArray(0.00394863, dtype=float64), DeviceArray(0.0039485, dtype=float64), DeviceArray(0.00392743, dtype=float64), DeviceArray(0.00392164, dtype=float64), DeviceArray(0.00392153, dtype=float64), DeviceArray(0.0039192, dtype=float64), DeviceArray(0.00391904, dtype=float64), DeviceArray(0.00391858, dtype=float64), DeviceArray(0.00391857, dtype=float64), DeviceArray(0.00391797, dtype=float64), DeviceArray(0.00391781, dtype=float64), DeviceArray(0.00391777, dtype=float64), DeviceArray(0.00391775, dtype=float64), DeviceArray(0.00391749, dtype=float64), DeviceArray(0.00391708, dtype=float64), DeviceArray(0.00391689, dtype=float64), DeviceArray(0.00391661, dtype=float64), DeviceArray(0.00391651, dtype=float64), DeviceArray(0.00391578, dtype=float64), DeviceArray(0.00391571, dtype=float64), DeviceArray(0.00391563, dtype=float64), DeviceArray(0.00391254, dtype=float64), DeviceArray(0.00389293, dtype=float64), DeviceArray(0.00378101, dtype=float64), DeviceArray(0.00377241, dtype=float64), DeviceArray(0.00371852, dtype=float64), DeviceArray(0.00371491, dtype=float64), DeviceArray(0.00367452, dtype=float64), DeviceArray(0.00367081, dtype=float64), DeviceArray(0.0036406, dtype=float64), DeviceArray(0.00363987, dtype=float64), DeviceArray(0.00362694, dtype=float64), DeviceArray(0.0036259, dtype=float64), DeviceArray(0.00361584, dtype=float64), DeviceArray(0.0036157, dtype=float64), DeviceArray(0.00360304, dtype=float64), DeviceArray(0.00360235, dtype=float64), DeviceArray(0.00359203, dtype=float64), DeviceArray(0.00357246, dtype=float64), DeviceArray(0.00356923, dtype=float64), DeviceArray(0.00356878, dtype=float64), DeviceArray(0.00355805, dtype=float64), DeviceArray(0.00355521, dtype=float64), DeviceArray(0.00354823, dtype=float64), DeviceArray(0.00354357, dtype=float64), DeviceArray(0.00353464, dtype=float64), DeviceArray(0.00352854, dtype=float64), DeviceArray(0.00352716, dtype=float64), DeviceArray(0.00350472, dtype=float64), DeviceArray(0.00350089, dtype=float64), DeviceArray(0.00349702, dtype=float64), DeviceArray(0.00349691, dtype=float64), DeviceArray(0.0034939, dtype=float64), DeviceArray(0.00349368, dtype=float64), DeviceArray(0.00347226, dtype=float64), DeviceArray(0.00346873, dtype=float64), DeviceArray(0.00330476, dtype=float64), DeviceArray(0.00327024, dtype=float64), DeviceArray(0.0032481, dtype=float64), DeviceArray(0.0032409, dtype=float64), DeviceArray(0.00323538, dtype=float64), DeviceArray(0.00315558, dtype=float64), DeviceArray(0.00311564, dtype=float64), DeviceArray(0.00311398, dtype=float64), DeviceArray(0.0031136, dtype=float64), DeviceArray(0.00311004, dtype=float64), DeviceArray(0.00310941, dtype=float64), DeviceArray(0.00306393, dtype=float64), DeviceArray(0.00306147, dtype=float64), DeviceArray(0.00305638, dtype=float64), DeviceArray(0.00302152, dtype=float64), DeviceArray(0.00302123, dtype=float64), DeviceArray(0.00300879, dtype=float64), DeviceArray(0.00300792, dtype=float64), DeviceArray(0.00299378, dtype=float64), DeviceArray(0.00297932, dtype=float64), DeviceArray(0.0029764, dtype=float64), DeviceArray(0.00297565, dtype=float64), DeviceArray(0.00297192, dtype=float64), DeviceArray(0.00296995, dtype=float64), DeviceArray(0.00296346, dtype=float64), DeviceArray(0.00296098, dtype=float64), DeviceArray(0.00294432, dtype=float64), DeviceArray(0.00294225, dtype=float64), DeviceArray(0.00282042, dtype=float64), DeviceArray(0.00279984, dtype=float64), DeviceArray(0.00277704, dtype=float64), DeviceArray(0.00277681, dtype=float64), DeviceArray(0.00277653, dtype=float64), DeviceArray(0.00277327, dtype=float64), DeviceArray(0.00276125, dtype=float64), DeviceArray(0.00275328, dtype=float64), DeviceArray(0.00275133, dtype=float64), DeviceArray(0.00275103, dtype=float64), DeviceArray(0.00274708, dtype=float64), DeviceArray(0.00274643, dtype=float64), DeviceArray(0.00272703, dtype=float64), DeviceArray(0.00271318, dtype=float64), DeviceArray(0.00270995, dtype=float64), DeviceArray(0.00269328, dtype=float64), DeviceArray(0.00267317, dtype=float64), DeviceArray(0.00266733, dtype=float64), DeviceArray(0.00265527, dtype=float64), DeviceArray(0.00265018, dtype=float64), DeviceArray(0.00264785, dtype=float64), DeviceArray(0.00249618, dtype=float64), DeviceArray(0.00245198, dtype=float64), DeviceArray(0.00245148, dtype=float64), DeviceArray(0.00243081, dtype=float64), DeviceArray(0.00242942, dtype=float64), DeviceArray(0.00240458, dtype=float64), DeviceArray(0.0023863, dtype=float64), DeviceArray(0.00238528, dtype=float64), DeviceArray(0.00237625, dtype=float64), DeviceArray(0.00237542, dtype=float64), DeviceArray(0.0023686, dtype=float64), DeviceArray(0.00236849, dtype=float64), DeviceArray(0.00236287, dtype=float64), DeviceArray(0.00236155, dtype=float64), DeviceArray(0.00236, dtype=float64), DeviceArray(0.00235985, dtype=float64), DeviceArray(0.00235134, dtype=float64), DeviceArray(0.00235088, dtype=float64), DeviceArray(0.0023406, dtype=float64), DeviceArray(0.0023405, dtype=float64), DeviceArray(0.00232501, dtype=float64), DeviceArray(0.00232431, dtype=float64), DeviceArray(0.00224924, dtype=float64), DeviceArray(0.00221772, dtype=float64), DeviceArray(0.00219336, dtype=float64), DeviceArray(0.00219334, dtype=float64), DeviceArray(0.00219132, dtype=float64), DeviceArray(0.00219074, dtype=float64), DeviceArray(0.00217491, dtype=float64), DeviceArray(0.00216483, dtype=float64), DeviceArray(0.00216036, dtype=float64), DeviceArray(0.00215978, dtype=float64), DeviceArray(0.00214998, dtype=float64), DeviceArray(0.00214724, dtype=float64), DeviceArray(0.0021471, dtype=float64), DeviceArray(0.00214119, dtype=float64)]

loss_function1 = "angles"
loss_function2 = "end-effector"

trajectory = ""

title = "Loss convergence of " + str(trajectory) + " for the \n" + str(loss_function1) + " and " + str(loss_function2) + " loss functions"

iterations = np.arange(len(losses1))

plt.plot(iterations, losses1, label=loss_function1)
plt.plot(iterations, losses2, label=loss_function2)

plt.legend()
plt.savefig("")
plt.show()